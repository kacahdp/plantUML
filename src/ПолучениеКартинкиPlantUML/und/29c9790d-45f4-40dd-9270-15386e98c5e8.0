{4,
{49,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КЕ",1,0,
{1,0},
{1,0},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КЕКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КЕРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"Страницы",
{1,1,
{"ru","Страницы"}
},
{1,1,
{"ru","Страницы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,1,
{0,1,0},2,0,1},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницаОнлайнСервер",
{1,1,
{"ru","Онлайн сервер"}
},
{1,1,
{"ru","Страница онлайн сервер"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ФормаПолучитьКартинку",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаПолучитьКартинкуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"КартинкаОнлайн",1,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,0,1,1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,0,
{0},1,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,0,0,1,0,1,100},
{0,1,0},1,
{22,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаОнлайнКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаОнлайнРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},1,0,1,
{12,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаОнлайнСерверРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ОффлайнКомпонента",
{1,1,
{"ru","Оффлайн компонента"}
},
{1,1,
{"ru","Оффлайн компонента"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"СгенерироватьКартинку",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерироватьКартинкуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"КартинкаОффлайн",1,0,
{1,0},
{1,0},
{1,
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,0,1,1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,0,
{0},1,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,0,0,1,0,1,100},
{0,1,0},1,
{22,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаОффлайнКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаОффлайнРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},1,0,1,
{12,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОффлайнКомпонентаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГрафыСГруппами",
{1,1,
{"ru","Графы с группами"}
},
{1,1,
{"ru","Графы с группами"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ПолучитьГраф",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{32,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПолучитьГрафРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"КартинкаГрафы",1,0,
{1,0},
{1,0},
{1,
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,0,1,1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,0,
{0},1,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,0,0,1,0,1,100},
{0,1,0},1,
{22,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаГрафыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаГрафыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},1,0,1,
{12,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГрафыСГруппамиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"&НаКлиенте
Перем ИдентификаторКомпоненты, ВнешняяКомпонента, ДанныеГрафа;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресКомпоненты = ""ОбщийМакет._dl_GraphViz1C"";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИдентификаторКомпоненты = ""_"" + СтрЗаменить(Новый УникальныйИдентификатор, ""-"", """");
	ВыполнитьПодключениеВнешнейКомпоненты(Истина);
	
	ДанныеГрафа = """";
	Зум = 80;    
	
	Элементы.КартинкаОнлайн.Масштаб = Зум;
	Элементы.КартинкаОффлайн.Масштаб = Зум;
	
КонецПроцедуры

&НаСервере
Функция BFS(КонфигурационнаяЕдиница) Экспорт
	
	СписокСмежности = Новый Соответствие;
	СписокСмежности.Вставить(КонфигурационнаяЕдиница, Новый Соответствие);
	
	ВершиныПосещенные = Новый Соответствие;
	ВершиныПосещенные.Вставить(КонфигурационнаяЕдиница, Истина);
	
	ВершиныКПосещению = Новый Массив;
	ВершиныКПосещению.Добавить(КонфигурационнаяЕдиница);
	
	Пока Истина Цикл 
		
		Запрос = Новый Запрос;
		Запрос.Текст = ""ВЫБРАТЬ
		               |	_dl_СвязиОбъектовСрезПоследних.ОбъектИз КАК ОбъектИз,
		               |	_dl_СвязиОбъектовСрезПоследних.ОбъектВ КАК ОбъектВ,
		               |	_dl_СвязиОбъектовСрезПоследних.ТипСвязи КАК ТипСвязи,
		               |	_dl_СвязиОбъектовСрезПоследних.Актуальна КАК Актуальна
		               |ИЗ
		               |	РегистрСведений._dl_СвязиОбъектов.СрезПоследних(&Дата, ОбъектИз В (&СписокОбъектов)) КАК _dl_СвязиОбъектовСрезПоследних
		               |ГДЕ
		               |	_dl_СвязиОбъектовСрезПоследних.Актуальна"";
		
		Запрос.УстановитьПараметр(""Дата"", ТекущаяДатаСеанса());
		Запрос.УстановитьПараметр(""СписокОбъектов"", ВершиныКПосещению);
		
		Результат = Запрос.Выполнить();
		ВершиныКПосещению.Очистить();
		Если Результат.Пустой() Тогда 
			Прервать;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ВершиныПосещенные.Получить(Выборка.ОбъектВ) = Неопределено Тогда 
				
				Если СписокСмежности.Получить(Выборка.ОбъектИз) = Неопределено Тогда 
					СписокСмежности.Вставить(Выборка.ОбъектИз, Новый Соответствие);
				КонецЕсли;			
				СписокСмежности[Выборка.ОбъектИз].Вставить(Выборка.ОбъектВ, Истина);
				
				ВершиныПосещенные.Вставить(Выборка.ОбъектВ, Истина);
				ВершиныКПосещению.Добавить(Выборка.ОбъектВ);  
						
			ИначеЕсли СписокСмежности.Получить(Выборка.ОбъектВ) = Неопределено 
				ИЛИ СписокСмежности[Выборка.ОбъектВ].Получить(Выборка.ОбъектИз) = Неопределено Тогда 

				Если СписокСмежности.Получить(Выборка.ОбъектИз) = Неопределено Тогда 
					СписокСмежности.Вставить(Выборка.ОбъектИз, Новый Соответствие);
				КонецЕсли;			
				СписокСмежности[Выборка.ОбъектИз].Вставить(Выборка.ОбъектВ, Истина);				
			КонецЕсли;
			
		КонецЦикла;
		
		СборВОбратнуюСторону(ВершиныКПосещению, ВершиныПосещенные, СписокСмежности);
		
		Если ВершиныКПосещению.Количество() = 0 Тогда 
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокСмежности;
	
КонецФункции  

&НаСервере
Процедура СборВОбратнуюСторону(Знач ВершиныКП, Знач ВершиныП, СписокСмежности)
	
	ВершиныПосещенные = Новый Массив;
	Для каждого Стр Из ВершиныП Цикл
		ВершиныПосещенные.Добавить(Стр.Ключ);	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ""ВЫБРАТЬ
	               |	_dl_СвязиОбъектовСрезПоследних.ОбъектИз КАК ОбъектИз,
	               |	_dl_СвязиОбъектовСрезПоследних.ОбъектВ КАК ОбъектВ,
	               |	_dl_СвязиОбъектовСрезПоследних.ТипСвязи КАК ТипСвязи,
	               |	_dl_СвязиОбъектовСрезПоследних.Актуальна КАК Актуальна
	               |ИЗ
	               |	РегистрСведений._dl_СвязиОбъектов.СрезПоследних(
	               |			&Дата,
	               |			ОбъектИз В (&СписокОбъектов)
	               |				И ОбъектВ В (&ВершиныПосещенные)) КАК _dl_СвязиОбъектовСрезПоследних
	               |ГДЕ
	               |	_dl_СвязиОбъектовСрезПоследних.Актуальна"";
	
	Запрос.УстановитьПараметр(""Дата"", 				ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр(""СписокОбъектов"", 	ВершиныКП);
	Запрос.УстановитьПараметр(""ВершиныПосещенные"", 	ВершиныПосещенные);
	
	Результат = Запрос.Выполнить();
	//ВершиныКП.Очистить();
	Если Результат.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл   
		
		Если СписокСмежности.Получить(Выборка.ОбъектИз) = Неопределено Тогда 
			СписокСмежности.Вставить(Выборка.ОбъектИз, Новый Соответствие);
		КонецЕсли;			
		СписокСмежности[Выборка.ОбъектИз].Вставить(Выборка.ОбъектВ, Истина);
		//Если ВершиныП.Получить(Выборка.ОбъектВ) = Неопределено Тогда 
		//	
		//	Если СписокСмежности.Получить(Выборка.ОбъектИз) = Неопределено Тогда 
		//		СписокСмежности.Вставить(Выборка.ОбъектИз, Новый Соответствие);
		//	КонецЕсли;			
		//	СписокСмежности[Выборка.ОбъектИз].Вставить(Выборка.ОбъектВ, Истина);
		//	
		//	ВершиныП.Вставить(Выборка.ОбъектВ, Истина);
		//	ВершиныКП.Добавить(Выборка.ОбъектВ);  
		//	
		//ИначеЕсли СписокСмежности.Получить(Выборка.ОбъектВ) = Неопределено 
		//	ИЛИ СписокСмежности[Выборка.ОбъектВ].Получить(Выборка.ОбъектИз) = Неопределено Тогда 
		//	
		//	Если СписокСмежности.Получить(Выборка.ОбъектИз) = Неопределено Тогда 
		//		СписокСмежности.Вставить(Выборка.ОбъектИз, Новый Соответствие);
		//	КонецЕсли;			
		//	СписокСмежности[Выборка.ОбъектИз].Вставить(Выборка.ОбъектВ, Истина);				
		//КонецЕсли;
		
	КонецЦикла;	

КонецПроцедуры

&НаСервере
Функция СформироватьUMLДиаграммуКомпонентовПоСпискуСмежности(СписокСмежности, ИмяГрафа="""") Экспорт
	
	//Граф = ""digraph "" + ?(ИмяГрафа="""", ""Граф"",ИмяГрафа) + "" {
	//|	node [shape=box];
	//|"";
				
	Вершины = Новый Соответствие;
	Для Каждого Стр Из СписокСмежности Цикл 
		Вершины.Вставить(Стр.Ключ, Истина);
		Для Каждого chield Из Стр.Значение Цикл 
			Вершины.Вставить(chield.Ключ, Истина);
		КонецЦикла;
	КонецЦикла;
	
	СписокВершин = Новый СписокЗначений;
	Для Каждого Стр Из Вершины Цикл 
		СписокВершин.Добавить(Стр.Ключ);
	КонецЦикла;	
	Запрос = Новый Запрос;
	Запрос.Текст = ""ВЫБРАТЬ
	               |	_dl_КонфигурационныеЕдиницы.Ссылка КАК Ссылка,
	               |	_dl_КонфигурационныеЕдиницы.Код КАК Код,
	               |	_dl_КонфигурационныеЕдиницы.КатегорияТипа КАК КатегорияТипа
	               |ИЗ
	               |	Справочник._dl_КонфигурационныеЕдиницы КАК _dl_КонфигурационныеЕдиницы
	               |ГДЕ
	               |	_dl_КонфигурационныеЕдиницы.Ссылка В(&Список)
	               |ИТОГИ ПО
	               |	КатегорияТипа"";
	
	Запрос.УстановитьПараметр(""Список"", СписокВершин);	
	ВыборкаКатегорияТипа = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ИдентификаторыВершин = Новый Соответствие;
	ТипыВершин = Новый Соответствие;
	
	СтрокаГрупп = ""@startuml""+Символы.ПС;
	
	Пока ВыборкаКатегорияТипа.Следующий() Цикл 
		
		СтрокаГрупп = СтрокаГрупп + ""package ""+ВыборкаКатегорияТипа.КатегорияТипа+"" {"" + Символы.ПС;
		
		Выборка = ВыборкаКатегорияТипа.Выбрать(); 
		Пока Выборка.Следующий() Цикл  
			
			СтрокаГрупп = СтрокаГрупп + ""["" + Выборка.Ссылка + ""] as "" + Выборка.Код + Символы.ПС;//+ "" #Black"" 
			
			//ИдентификаторыВершин.Вставить(Выборка.Ссылка, Выборка.Код);		
			//ТипыВершин.Вставить(Выборка.Ссылка, Выборка.Тип);	
		КонецЦикла; 
		
		СтрокаГрупп = СтрокаГрупп + ""}"" + Символы.ПС;
		
	КонецЦикла;
	
	//Для Каждого Стр Из Вершины Цикл   
		
		
		//Граф = Граф + Символы.Таб + ИдентификаторыВершин[Стр.Ключ] + "" [label=""""""+Стр.Ключ+"""""""";
		//Если ТипыВершин[Стр.Ключ] = Справочники._dl_ТипыКонфигурационныхЕдиниц.ИнформационнаяБаза1С Тогда 
		//	Граф = Граф + "" shape=oval fillcolor=Orange style=filled"";
		//ИначеЕсли ТипыВершин[Стр.Ключ] = Справочники._dl_ТипыКонфигурационныхЕдиниц.БазаДанныхСУБД Тогда 
		//	Граф = Граф + "" shape=cylinder fillcolor=LightBlue style=filled"";
		//ИначеЕсли ТипыВершин[Стр.Ключ] = Справочники._dl_ТипыКонфигурационныхЕдиниц.МенеджерКластера1С Тогда 
		//	Граф = Граф + "" fillcolor=Honeydew style=filled"";
		//ИначеЕсли ТипыВершин[Стр.Ключ] = Справочники._dl_ТипыКонфигурационныхЕдиниц.Кластер1С Тогда 
		//	Граф = Граф + "" fillcolor=Bisque style=filled"";
		//КонецЕсли;
		//Граф = Граф + ""]"" + Символы.ПС;
	//КонецЦикла;
	
	СтрокаСвязей = """";
	Для Каждого Стр Из СписокСмежности Цикл 
		Для Каждого chield Из Стр.Значение Цикл 
			Связь = ""-->"";
			
			СтрокаСвязей = СтрокаСвязей + Стр.Ключ.Код + Связь + chield.Ключ.Код + Символы.ПС;
			
			//Граф = Граф + Символы.Таб+ """"""""+ИдентификаторыВершин[Стр.Ключ]+"""""" -> """"""+ИдентификаторыВершин[chield.Ключ]+"""""""" + Символы.ПС;
		КонецЦикла;
	КонецЦикла;
	
	Текст = """";
	
	Текст = СтрокаГрупп + Символы.ПС + СтрокаСвязей + Символы.ПС + ""@enduml"";
	
	ПолучитьЗакодированныеДанные();  
	
	//Граф = Граф + ""
	//|}"";
	
	Возврат Текст;
	
КонецФункции

&НаСервере
Процедура СгенерироватьТекстНаСервере()
	
	Соответствия = BFS(КЕ);
	Диаграмма = СформироватьUMLДиаграммуКомпонентовПоСпискуСмежности(Соответствия);
	
	Возврат;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	""ВЫБРАТЬ
	|	_dl_СвязиОбъектов.ОбъектИз КАК ОбъектИз,
	|	_dl_СвязиОбъектов.ОбъектВ КАК ОбъектВ
	|ПОМЕСТИТЬ втСвязи
	|ИЗ
	|	РегистрСведений._dl_СвязиОбъектов КАК _dl_СвязиОбъектов
	|ГДЕ
	|	_dl_СвязиОбъектов.Актуальна
	|	И _dl_СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
	|	И _dl_СвязиОбъектов.ОбъектИз = &ОбъектСвязи
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	_dl_СвязиОбъектов.ОбъектВ,
	|	_dl_СвязиОбъектов.ОбъектИз
	|ИЗ
	|	РегистрСведений._dl_СвязиОбъектов КАК _dl_СвязиОбъектов
	|ГДЕ
	|	_dl_СвязиОбъектов.Актуальна
	|	И _dl_СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
	|	И _dl_СвязиОбъектов.ОбъектВ = &ОбъектСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСвязи.ОбъектИз КАК ОбъектИз,
	|	втСвязи.ОбъектВ КАК ОбъектВ,
	|	втСвязи.ОбъектИз.КатегорияТипа КАК ОбъектИзКатегорияТипа,
	|	втСвязи.ОбъектВ.КатегорияТипа КАК ОбъектВКатегорияТипа
	|ИЗ
	|	втСвязи КАК втСвязи
	|ИТОГИ ПО
	|	ОбъектИз,
	|	ОбъектВ"";
	
	Запрос.УстановитьПараметр(""ОбъектСвязи"", КЕ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИз = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МассивЭлементовИз = Новый Массив;
	МассивЭлементовВ = Новый Массив;
	
	СтрокаСвязей = """";
	
	Пока ВыборкаИз.Следующий() Цикл
		ВыборкаВ = ВыборкаИз.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
		Пока ВыборкаВ.Следующий() Цикл
			Если МассивЭлементовИз.Найти(ВыборкаВ.ОбъектИз) = Неопределено Тогда
				МассивЭлементовИз.Добавить(ВыборкаВ.ОбъектИз);
			КонецЕсли;   
			
			Если МассивЭлементовВ.Найти(ВыборкаВ.ОбъектВ) = Неопределено Тогда
				МассивЭлементовВ.Добавить(ВыборкаВ.ОбъектВ);
			КонецЕсли;
			
			ВыборкаДетальные = ВыборкаВ.Выбрать();
			
			Если ВыборкаДетальные.Количество() = 1 Тогда
              	Связь = ""-->"";
			ИначеЕсли ВыборкаДетальные.Количество() = 2 Тогда 
				Связь = ""<-->"";
			КонецЕсли;
			
			СтрокаСвязей = СтрокаСвязей + ПолучитьИмяОбъекта(ВыборкаВ.ОбъектИз) + Связь + ПолучитьИмяОбъекта(ВыборкаВ.ОбъектВ) + Символы.ПС;
  		КонецЦикла;	
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектИз КАК Объект,
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектИз.КатегорияТипа КАК КатегорияТипа
		|ПОМЕСТИТЬ втСвязи
		|ИЗ
		|	РегистрСведений._dl_СвязиОбъектов.СрезПоследних(
		|			,
		|			ОбъектВ В (&МассивЭлементовВ)
		|				И ОбъектИз В (&МассивЭлементовИз)) КАК _dl_СвязиОбъектовСрезПоследних
		|ГДЕ
		|	_dl_СвязиОбъектовСрезПоследних.ТипСвязи = ЗНАЧЕНИЕ(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
		|	И _dl_СвязиОбъектовСрезПоследних.Актуальна
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектВ,
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектВ.КатегорияТипа
		|ИЗ
		|	РегистрСведений._dl_СвязиОбъектов.СрезПоследних(
		|			,
		|			ОбъектВ В (&МассивЭлементовВ)
		|				И ОбъектИз В (&МассивЭлементовИз)) КАК _dl_СвязиОбъектовСрезПоследних
		|ГДЕ
		|	_dl_СвязиОбъектовСрезПоследних.ТипСвязи = ЗНАЧЕНИЕ(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
		|	И _dl_СвязиОбъектовСрезПоследних.Актуальна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСвязи.Объект КАК Объект,
		|	втСвязи.КатегорияТипа КАК КатегорияТипа
		|ИЗ
		|	втСвязи КАК втСвязи
		|
		|СГРУППИРОВАТЬ ПО
		|	втСвязи.Объект,
		|	втСвязи.КатегорияТипа
		|ИТОГИ ПО
		|	КатегорияТипа"";
	
	Запрос.УстановитьПараметр(""МассивЭлементовИз"", МассивЭлементовИз);
	Запрос.УстановитьПараметр(""МассивЭлементовВ"", МассивЭлементовВ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКатегория = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтрокаГрупп = ""@startuml""+Символы.ПС;
	
	Пока ВыборкаКатегория.Следующий() Цикл
		
		СтрокаГрупп = СтрокаГрупп + ""package ""+ВыборкаКатегория.КатегорияТипа+"" {"" + Символы.ПС;	
		
		Выборка = ВыборкаКатегория.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокаГрупп = СтрокаГрупп + ""["" + Выборка.Объект + ""] as ""+ПолучитьИмяОбъекта(Выборка.Объект) + Символы.ПС;//+ "" #Black"" 
				
		КонецЦикла;
		
		СтрокаГрупп = СтрокаГрупп + ""}"" + Символы.ПС;
		
	КонецЦикла; 
	
	Текст = """";
	
	Текст = СтрокаГрупп + Символы.ПС + СтрокаСвязей + Символы.ПС + ""@enduml"";
	
	ПолучитьЗакодированныеДанные();  
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКартинку(Команда)
	СгенерироватьТекстНаСервере();
	ОтправитьДанныеВplantuml();
КонецПроцедуры     

&НаСервере
Функция ПолучитьИмяОбъекта(Наименование)
	
	Имя = СтрЗаменить(Наименование, "" "", """");
	Имя = СтрЗаменить(Имя, ""-"", ""_""); 
	
	Возврат Имя;	

КонецФункции   

&НаСервере
Процедура ПолучитьЗакодированныеДанные()

	ЗакодированнаяСтрока = нРег(Str2Hex(Текст, 16));

КонецПроцедуры 

&НаСервере
Функция Str2Hex(ТекстСообщения, ТипКодировки)
	
	СтрокаЗнаков = """";
	Если ТипКодировки = 1 Тогда
		ДлинаКодаСимвола = 4;
	Иначе
		ДлинаКодаСимвола = 2;
	КонецЕсли;
	Для К = 1 По СтрДлина(ТекстСообщения) Цикл
		СтрокаЗнаков = СтрокаЗнаков + Прав(""0000""+DecToHex(КодСимвола(Сред(ТекстСообщения, К, 1))), ДлинаКодаСимвола);
	КонецЦикла;
	Возврат СтрокаЗнаков; 
	
КонецФункции 

&НаСервере
Функция DecToHex(Знач _Число)
	
	База = 16;
	Результат = """";
	Пока _Число <> 0 Цикл
		Поз =_Число % База;
		Результат = Сред(""0123456789ABCDEF"", Поз + 1, 1) + Результат;
		_Число = Цел(_Число / База);
	КонецЦикла;    
	
	Возврат Результат;
	
КонецФункции  

&НаСервере
Процедура ОтправитьДанныеВplantuml()
		
	Соединение = Новый HTTPСоединение(""www.plantuml.com"");
 
    Запрос = Новый HTTPЗапрос(""plantuml/png/~h""+ЗакодированнаяСтрока);
		
	ИмяВходящегоФайла = ПолучитьИмяВременногоФайла(""png"");
	
	Результат = Соединение.Получить(Запрос, ИмяВходящегоФайла); 
	
	ФайлКартинки = Новый ДвоичныеДанные(ИмяВходящегоФайла);
	КартинкаPNG = Новый Картинка(ФайлКартинки);
	
	КартинкаОнлайн = ПоместитьВоВременноеХранилище(КартинкаPNG, Новый УникальныйИдентификатор);	
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьКартинку(Команда)
	
	СгенерироватьТекстНаСервере();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();   
	
	Для а = 1 По СтрЧислоСтрок(Текст) Цикл
		СтрокаДанных = СтрПолучитьСтроку(Текст, а);
		ТекстовыйДокумент.ДобавитьСтроку(СтрокаДанных);
	КонецЦикла;
	
	ТекстовыйДокумент.Записать(""C:\UML1C\uml.txt"");
			
	Кодировка = КодировкаТекста.UTF8;

	СМД = ""java -jar C:\UML1C\plantuml.jar -charset utf-8 C:\UML1C\uml.txt"";//-language ru -charset utf-8 -keepfiles	
		
	КомандаСистемы(""cmd.exe /c """""" + СМД + """""""", ""C:\UML1C\"");
	
	ФайлКартинки = Новый ДвоичныеДанные(""C:\UML1C\uml.png"");
	КартинкаPNG = Новый Картинка(ФайлКартинки);
	
	КартинкаОффлайн = ПоместитьВоВременноеХранилище(КартинкаPNG, Новый УникальныйИдентификатор);
  	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтандартныйЗум()
	
	Зум = 80;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьГраф(Команда)
	
	ДанныеГрафа = СформироватьГрафДОТПоСпискуСмежности(BFS(КЕ));
	УстановитьСтандартныйЗум();
	СформироватьКартинку(); 
	
КонецПроцедуры 

Функция СформироватьГрафДОТПоСпискуСмежности(СписокСмежности, ИмяГрафа="""") Экспорт
	
	ШапкаГрафа = ""digraph "" + ?(ИмяГрафа="""", ""Граф"",ИмяГрафа) + "" {
	|	node [shape=box]
	|	rankdir=RL;
	|	ratio=0;
	|"";
	
	Вершины = Новый Соответствие;
	Для Каждого Стр Из СписокСмежности Цикл 
		Вершины.Вставить(Стр.Ключ, Истина);
		Для Каждого chield Из Стр.Значение Цикл 
			Вершины.Вставить(chield.Ключ, Истина);
		КонецЦикла;
	КонецЦикла;
	
	СписокВершин = Новый СписокЗначений;
	Для Каждого Стр Из Вершины Цикл 
		СписокВершин.Добавить(Стр.Ключ);
	КонецЦикла;	 
	
	ИдентификаторыВершин = Новый Соответствие;
			
	Запрос = Новый Запрос;
	Запрос.Текст = ""ВЫБРАТЬ
	               |	_dl_КонфигурационныеЕдиницы.Ссылка КАК Ссылка,
	               |	_dl_КонфигурационныеЕдиницы.Код КАК Код,
	               |	_dl_КонфигурационныеЕдиницы.Тип КАК Тип,
	               |	_dl_КонфигурационныеЕдиницы.КатегорияТипа КАК КатегорияТипа,
	               |	_dl_КонфигурационныеЕдиницы.тест_ГруппыПриложений КАК тест_ГруппыПриложений
	               |ИЗ
	               |	Справочник._dl_КонфигурационныеЕдиницы КАК _dl_КонфигурационныеЕдиницы
	               |ГДЕ
	               |	_dl_КонфигурационныеЕдиницы.Ссылка В(&Список)
	               |ИТОГИ ПО
	               |	тест_ГруппыПриложений"";
	
	Запрос.УстановитьПараметр(""Список"", СписокВершин);	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Счетчик = 0;
	ВсеСубграфы = """";
	Пока Выборка.Следующий() Цикл
		Субграф = """";
		Счетчик = Счетчик + 1;		
				
		ВыборкаДет = Выборка.Выбрать();
		Пока ВыборкаДет.Следующий() Цикл  
			Субграф = Субграф + Символы.Таб + Символы.Таб + ВыборкаДет.Код + "" [label=""""""+ВыборкаДет.Ссылка+""""""]"" + Символы.ПС;			
			
			ИдентификаторыВершин.Вставить(ВыборкаДет.Ссылка, ВыборкаДет.Код);	
		КонецЦикла; 
		
		Субграф = Субграф + Символы.ПС;
				
		Лейбл = Символы.Таб + Символы.Таб + "" label = """"""+Выборка.тест_ГруппыПриложений+"""""" ;"";
		
		ВсеСубграфы = ВсеСубграфы + ?(ВсеСубграфы="""", """", Символы.ПС) + Символы.Таб + ""subgraph "" + ""cluster_""+Счетчик;
		ВсеСубграфы = ВсеСубграфы + "" { "" + Символы.ПС + Лейбл + Символы.ПС + Субграф +"" } "";	  
		
	КонецЦикла; 
	
	ВсеСубграфы = ВсеСубграфы + Символы.ПС;
	
	Связи = """";
	
	ТЗИспользованияПортов = ПолучитьТаблицуПортовПротоколов(СписокВершин);
	
	ТЗПройденныхСвязей = Новый ТаблицаЗначений; 
	ТЗПройденныхСвязей.Колонки.Добавить(""ОбъектИз"");
	ТЗПройденныхСвязей.Колонки.Добавить(""ОбъектВ"");
	
	Для Каждого Стр Из СписокСмежности Цикл 
		Для Каждого chield Из Стр.Значение Цикл 
			ПортПротокол 	= """";
			Порты 			= """";   
			Ориентированная = """";	
			
			НайденныеСвязи = ТЗПройденныхСвязей.НайтиСтроки(Новый Структура(""ОбъектИз, ОбъектВ"", Стр.Ключ, chield.Ключ)); 
			Если НайденныеСвязи.Количество() > 0 Тогда 
				Продолжить;
			Иначе  
				СтрТЗ = ТЗПройденныхСвязей.Добавить();
				СтрТЗ.ОбъектИз = chield.Ключ;
				СтрТЗ.ОбъектВ = Стр.Ключ;
			КонецЕсли;
			
			Если СписокСмежности.Получить(chield.Ключ) <> Неопределено 
				И СписокСмежности.Получить(chield.Ключ).Получить(Стр.Ключ) <> Неопределено Тогда
				
				Ориентированная = ""dir = both"";
			КонецЕсли;
			
			Найденные = ТЗИспользованияПортов.НайтиСтроки(Новый Структура(""Сервер, Клиент"", Стр.Ключ, chield.Ключ));
			Если Найденные.Количество() = 0 Тогда 
				Связи = Связи + Символы.Таб + """"""""+ИдентификаторыВершин[Стр.Ключ]+"""""" -> """"""+ИдентификаторыВершин[chield.Ключ]+"""""""";
				Связи = Связи + ?(Ориентированная="""", """", "" [ ""+Ориентированная+"" ] "");
			Иначе
				Для каждого Найденная Из Найденные Цикл 
					Если Найденная.ДиапазонПортовНачало <> 0 Тогда
						Если Найденная.ДиапазонПортовНачало = Найденная.ДиапазонПортовКонец Тогда
							Порты = """" + Найденная.ДиапазонПортовНачало;
						Иначе
							Порты = """" + Найденная.ДиапазонПортовНачало + ""-"" + Найденная.ДиапазонПортовКонец;	
						КонецЕсли;	
					КонецЕсли;
					
					Связи = Связи + Символы.Таб + """"""""+ИдентификаторыВершин[Стр.Ключ]+"""""" -> """"""+ИдентификаторыВершин[chield.Ключ]+"""""""";
					
					ПортПротокол = Порты + ?(ЗначениеЗаполнено(Найденная.Протокол),""/""+Найденная.Протокол, """"); 
					ПортПротокол = СтрЗаменить(ПортПротокол, Символы.НПП, """");
					
					Связи = Связи + "" [ label = """""" + ПортПротокол + """"""""+?(Ориентированная="""", """", "", ""+Ориентированная+"""")+""]"";
				КонецЦикла;	
			КонецЕсли;
						
			Связи = Связи + Символы.ПС;
		КонецЦикла;
	КонецЦикла;
	
	Граф = ШапкаГрафа + ВсеСубграфы + Связи;
	
	Граф = Граф + ""
	|}""; 
		
	Возврат Граф;
	
КонецФункции  

&НаСервере
Функция ПолучитьТаблицуПортовПротоколов(СписокВершин)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	_dl_ИспользованиеПортовСрезПоследних.Сервер КАК Сервер,
		|	_dl_ИспользованиеПортовСрезПоследних.Клиент КАК Клиент,
		|	_dl_ИспользованиеПортовСрезПоследних.ДиапазонПортовНачало КАК ДиапазонПортовНачало,
		|	_dl_ИспользованиеПортовСрезПоследних.ДиапазонПортовКонец КАК ДиапазонПортовКонец,
		|	_dl_ИспользованиеПортовСрезПоследних.Протокол КАК Протокол
		|ИЗ
		|	РегистрСведений._dl_ИспользованиеПортов.СрезПоследних КАК _dl_ИспользованиеПортовСрезПоследних
		|ГДЕ
		|	_dl_ИспользованиеПортовСрезПоследних.Сервер В(&СписокВершин)
		|	И _dl_ИспользованиеПортовСрезПоследних.Клиент В(&СписокВершин)
		|	И _dl_ИспользованиеПортовСрезПоследних.Используется"";
	
	Запрос.УстановитьПараметр(""СписокВершин"", СписокВершин);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗИспользованияПортов = РезультатЗапроса.Выгрузить();

	Возврат ТЗИспользованияПортов;

КонецФункции 

&НаКлиенте
Процедура СформироватьКартинку()
	
	ОписаниеОповещения = Новый ОписаниеОповещения(""ПолученаКартинка"", ЭтаФорма);
	ВнешняяКомпонента.НачатьВызовСформировать(ОписаниеОповещения, ДанныеГрафа, ""svg"");
	
КонецПроцедуры   

&НаКлиенте
Процедура ПолученаКартинка(РезультатВызова, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатВызова) = Тип(""ДвоичныеДанные"") Тогда
		СформироватьHTML_SVG(РезультатВызова);
	ИначеЕсли ТипЗнч(РезультатВызова) = Тип(""Строка"") Тогда
		Сообщить(РезультатВызова);
	КонецЕсли;
	
КонецПроцедуры
  
&НаКлиенте
Процедура СформироватьHTML_SVG(ДанныеКартинки) Экспорт
	
	КартинкаГрафы = ПоместитьВоВременноеХранилище(Новый Картинка(ДанныеКартинки), Новый УникальныйИдентификатор);	
	
КонецПроцедуры   

&НаКлиенте
Процедура ВыполнитьПодключениеВнешнейКомпоненты(ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения(""ПодключениеВнешнейКомпонентыЗавершение"", ЭтаФорма, ДополнительныеПараметры);
	НачатьПодключениеВнешнейКомпоненты(ОписаниеОповещения, АдресКомпоненты, ИдентификаторКомпоненты, ТипВнешнейКомпоненты.Native);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключениеВнешнейКомпонентыЗавершение(Подключение, ДополнительныеПараметры) Экспорт
	
	Если Подключение Тогда
		ВнешняяКомпонента = Новый(""AddIn."" + ИдентификаторКомпоненты + "".GraphViz1C"");
		//ОписаниеОповещения = Новый ОписаниеОповещения(""ПолученаВерсияКомпоненты"", ЭтаФорма);
		//ВнешняяКомпонента.НачатьПолучениеВерсия(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры



",
{4,8,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",5c11f0e6-1d8a-4612-ba00-51c950789370}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"КЕ",
{1,1,
{"ru","КЕ"}
},
{"Pattern",
{"#",3ad13301-2b2f-4f84-9aeb-0f8dc4112422}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ЗакодированнаяСтрока",
{1,1,
{"ru","Закодированная строка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"Текст",
{1,1,
{"ru","Текст"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"КартинкаОнлайн",
{1,1,
{"ru","Картинка онлайн"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"КартинкаОффлайн",
{1,1,
{"ru","Картинка оффлайн"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"КартинкаГрафы",
{1,1,
{"ru","Картинка графы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"АдресКомпоненты",
{1,1,
{"ru","Адрес компоненты"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,3,
{9,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПолучитьКартинку",
{1,1,
{"ru","Получить картинку"}
},
{1,1,
{"ru","Получить картинку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПолучитьКартинку",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СгенерироватьКартинку",
{1,1,
{"ru","Сгенерировать картинку"}
},
{1,1,
{"ru","Сгенерировать картинку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СгенерироватьКартинку",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПолучитьГраф",
{1,1,
{"ru","Получить граф"}
},
{1,1,
{"ru","Получить граф"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПолучитьГраф",3,0,0,
{0,0},1,0,1,0,0,2}
},
{0,0},
{0,0},0,0}