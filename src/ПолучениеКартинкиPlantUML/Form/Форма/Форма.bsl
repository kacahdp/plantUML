	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.КартинкаОнлайн.Масштаб = 80;
	Элементы.КартинкаОффлайн.Масштаб = 80;
	
КонецПроцедуры
	
&НаСервере
Процедура СгенерироватьТекстНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	_dl_СвязиОбъектов.ОбъектИз КАК ОбъектИз,
	|	_dl_СвязиОбъектов.ОбъектВ КАК ОбъектВ
	|ПОМЕСТИТЬ втСвязи
	|ИЗ
	|	РегистрСведений._dl_СвязиОбъектов КАК _dl_СвязиОбъектов
	|ГДЕ
	|	_dl_СвязиОбъектов.Актуальна
	|	И _dl_СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
	|	И _dl_СвязиОбъектов.ОбъектИз = &ОбъектСвязи
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	_dl_СвязиОбъектов.ОбъектВ,
	|	_dl_СвязиОбъектов.ОбъектИз
	|ИЗ
	|	РегистрСведений._dl_СвязиОбъектов КАК _dl_СвязиОбъектов
	|ГДЕ
	|	_dl_СвязиОбъектов.Актуальна
	|	И _dl_СвязиОбъектов.ТипСвязи = ЗНАЧЕНИЕ(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
	|	И _dl_СвязиОбъектов.ОбъектВ = &ОбъектСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСвязи.ОбъектИз КАК ОбъектИз,
	|	втСвязи.ОбъектВ КАК ОбъектВ,
	|	втСвязи.ОбъектИз.КатегорияТипа КАК ОбъектИзКатегорияТипа,
	|	втСвязи.ОбъектВ.КатегорияТипа КАК ОбъектВКатегорияТипа
	|ИЗ
	|	втСвязи КАК втСвязи
	|ИТОГИ ПО
	|	ОбъектИз,
	|	ОбъектВ";
	
	Запрос.УстановитьПараметр("ОбъектСвязи", КЕ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИз = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МассивЭлементовИз = Новый Массив;
	МассивЭлементовВ = Новый Массив;
	
	СтрокаСвязей = "";
	
	Пока ВыборкаИз.Следующий() Цикл
		ВыборкаВ = ВыборкаИз.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
		Пока ВыборкаВ.Следующий() Цикл
			Если МассивЭлементовИз.Найти(ВыборкаВ.ОбъектИз) = Неопределено Тогда
				МассивЭлементовИз.Добавить(ВыборкаВ.ОбъектИз);
			КонецЕсли;   
			
			Если МассивЭлементовВ.Найти(ВыборкаВ.ОбъектВ) = Неопределено Тогда
				МассивЭлементовВ.Добавить(ВыборкаВ.ОбъектВ);
			КонецЕсли;
			
			ВыборкаДетальные = ВыборкаВ.Выбрать();
			
			Если ВыборкаДетальные.Количество() = 1 Тогда
              	Связь = "-->";
			ИначеЕсли ВыборкаДетальные.Количество() = 2 Тогда 
				Связь = "<-->";
			КонецЕсли;
			
			СтрокаСвязей = СтрокаСвязей + ПолучитьИмяОбъекта(ВыборкаВ.ОбъектИз) + Связь + ПолучитьИмяОбъекта(ВыборкаВ.ОбъектВ) + Символы.ПС;
  		КонецЦикла;	
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектИз КАК Объект,
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектИз.КатегорияТипа КАК КатегорияТипа
		|ПОМЕСТИТЬ втСвязи
		|ИЗ
		|	РегистрСведений._dl_СвязиОбъектов.СрезПоследних(
		|			,
		|			ОбъектВ В (&МассивЭлементовВ)
		|				И ОбъектИз В (&МассивЭлементовИз)) КАК _dl_СвязиОбъектовСрезПоследних
		|ГДЕ
		|	_dl_СвязиОбъектовСрезПоследних.ТипСвязи = ЗНАЧЕНИЕ(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
		|	И _dl_СвязиОбъектовСрезПоследних.Актуальна
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектВ,
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектВ.КатегорияТипа
		|ИЗ
		|	РегистрСведений._dl_СвязиОбъектов.СрезПоследних(
		|			,
		|			ОбъектВ В (&МассивЭлементовВ)
		|				И ОбъектИз В (&МассивЭлементовИз)) КАК _dl_СвязиОбъектовСрезПоследних
		|ГДЕ
		|	_dl_СвязиОбъектовСрезПоследних.ТипСвязи = ЗНАЧЕНИЕ(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
		|	И _dl_СвязиОбъектовСрезПоследних.Актуальна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСвязи.Объект КАК Объект,
		|	втСвязи.КатегорияТипа КАК КатегорияТипа
		|ИЗ
		|	втСвязи КАК втСвязи
		|
		|СГРУППИРОВАТЬ ПО
		|	втСвязи.Объект,
		|	втСвязи.КатегорияТипа
		|ИТОГИ ПО
		|	КатегорияТипа";
	
	Запрос.УстановитьПараметр("МассивЭлементовИз", МассивЭлементовИз);
	Запрос.УстановитьПараметр("МассивЭлементовВ", МассивЭлементовВ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКатегория = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтрокаГрупп = "@startuml"+Символы.ПС;
	
	Пока ВыборкаКатегория.Следующий() Цикл
		
		СтрокаГрупп = СтрокаГрупп + "package "+ВыборкаКатегория.КатегорияТипа+" {" + Символы.ПС;	
		
		Выборка = ВыборкаКатегория.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокаГрупп = СтрокаГрупп + "[" + Выборка.Объект + "] as "+ПолучитьИмяОбъекта(Выборка.Объект) + Символы.ПС;//+ " #Black" 
				
		КонецЦикла;
		
		СтрокаГрупп = СтрокаГрупп + "}" + Символы.ПС;
		
	КонецЦикла; 
	
	Текст = "";
	
	Текст = СтрокаГрупп + Символы.ПС + СтрокаСвязей + Символы.ПС + "@enduml";
	
	ПолучитьЗакодированныеДанные();  
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКартинку(Команда)
	СгенерироватьТекстНаСервере();
	ОтправитьДанныеВplantuml();
КонецПроцедуры     

&НаСервере
Функция ПолучитьИмяОбъекта(Наименование)
	
	Имя = СтрЗаменить(Наименование, " ", "");
	Имя = СтрЗаменить(Имя, "-", "_"); 
	
	Возврат Имя;	

КонецФункции   

&НаСервере
Процедура ПолучитьЗакодированныеДанные()

	ЗакодированнаяСтрока = нРег(Str2Hex(Текст, 16));

КонецПроцедуры 

&НаСервере
Функция Str2Hex(ТекстСообщения, ТипКодировки)
	
	СтрокаЗнаков = "";
	Если ТипКодировки = 1 Тогда
		ДлинаКодаСимвола = 4;
	Иначе
		ДлинаКодаСимвола = 2;
	КонецЕсли;
	Для К = 1 По СтрДлина(ТекстСообщения) Цикл
		СтрокаЗнаков = СтрокаЗнаков + Прав("0000"+DecToHex(КодСимвола(Сред(ТекстСообщения, К, 1))), ДлинаКодаСимвола);
	КонецЦикла;
	Возврат СтрокаЗнаков; 
	
КонецФункции 

Функция DecToHex(Знач _Число)
	
	База = 16;
	Результат = "";
	Пока _Число <> 0 Цикл
		Поз =_Число % База;
		Результат = Сред("0123456789ABCDEF", Поз + 1, 1) + Результат;
		_Число = Цел(_Число / База);
	КонецЦикла;    
	
	Возврат Результат;
	
КонецФункции  

&НаСервере
Процедура ОтправитьДанныеВplantuml()
		
	Соединение = Новый HTTPСоединение("www.plantuml.com");
 
    Запрос = Новый HTTPЗапрос("plantuml/png/~h"+ЗакодированнаяСтрока);
		
	ИмяВходящегоФайла = ПолучитьИмяВременногоФайла("png");
	
	Результат = Соединение.Получить(Запрос, ИмяВходящегоФайла); 
	
	ФайлКартинки = Новый ДвоичныеДанные(ИмяВходящегоФайла);
	КартинкаPNG = Новый Картинка(ФайлКартинки);
	
	КартинкаОнлайн = ПоместитьВоВременноеХранилище(КартинкаPNG, Новый УникальныйИдентификатор);	
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьКартинку(Команда)
	
	СгенерироватьТекстНаСервере();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();   
	
	Для а = 1 По СтрЧислоСтрок(Текст) Цикл
		СтрокаДанных = СтрПолучитьСтроку(Текст, а);
		ТекстовыйДокумент.ДобавитьСтроку(СтрокаДанных);
	КонецЦикла;
	
	ТекстовыйДокумент.Записать("C:\TEST\uml.txt");
			
	Кодировка = КодировкаТекста.UTF8;

	СМД = "java -jar C:\TEST\plantuml.jar -charset utf-8 C:\TEST\uml.txt";//-language ru -charset utf-8 -keepfiles	
		
	КомандаСистемы("cmd.exe /c """ + СМД + """", "C:\TEST\");
	
	ФайлКартинки = Новый ДвоичныеДанные("C:\TEST\uml.png");
	КартинкаPNG = Новый Картинка(ФайлКартинки);
	
	КартинкаОффлайн = ПоместитьВоВременноеХранилище(КартинкаPNG, Новый УникальныйИдентификатор);
  	
КонецПроцедуры

